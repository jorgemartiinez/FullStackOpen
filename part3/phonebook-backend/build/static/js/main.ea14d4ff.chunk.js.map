{"version":3,"sources":["components/Filter.js","components/AddNew.js","components/Persons.js","components/Notification.js","services/PhoneBook.js","App.js","index.js"],"names":["Filter","search","handleSearch","value","onChange","AddNew","newName","newPhone","handleFormSubmit","handleNoteChange","handlePhoneChange","onSubmit","type","Person","person","handleDelete","key","name","number","onClick","id","Persons","persons","map","toUpperCase","trim","includes","Notification","notification","style","message","color","backgroundColor","fontStyle","border","padding","fontSize","URL","axios","get","then","response","data","phonebook","newPerson","post","updatedPerson","put","delete","App","useState","setPersons","setNewName","setNewPhone","setSearch","setNotification","useEffect","PhoneBookService","e","inputSearchValue","target","preventDefault","personExists","find","changedPerson","window","confirm","PhoneBook","catch","err","concat","inputNameValue","inputPhoneValue","deletedNote","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea14d4ff.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({search, handleSearch}) => {\r\n    return (\r\n        <div>\r\n            filter shown with: <input value={search} onChange={handleSearch} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react';\r\n\r\nconst AddNew = ({ newName, newPhone, handleFormSubmit, handleNoteChange, handlePhoneChange }) => {\r\n    return (\r\n        <form onSubmit={handleFormSubmit}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNoteChange} type=\"text\" />\r\n            </div>\r\n            <div>\r\n                phone number: <input value={newPhone} onChange={handlePhoneChange} type=\"number\" />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddNew\r\n","import React from 'react';\r\n\r\nconst Persons = ({ persons, search, handleDelete }) => {\r\n    return (\r\n        persons.map(person => {\r\n            if (person.name.toUpperCase().trim().includes(search.toUpperCase().trim())) {\r\n                return <Person key={person.name} person={person} handleDelete={handleDelete}/>\r\n            }\r\n            return '';\r\n        })\r\n    )\r\n}\r\n\r\nconst Person = ({ person, handleDelete }) => {\r\n    return (\r\n        <div>\r\n            <p key={person.name}><strong>{person.name}-{person.number}</strong></p>\r\n            <button onClick={() => handleDelete(person.name, person.id)}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons;\r\n","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n\r\n    let style = {};\r\n\r\n    if (!notification.message) {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n\r\n    if (notification.type === 'success') {\r\n        style = {\r\n            color: 'white',\r\n            backgroundColor: 'green',\r\n            fontStyle: 'italic',\r\n            border: '2px solid black',\r\n            padding: '20px',\r\n            fontSize: 18\r\n        }\r\n    } else {\r\n        style = {\r\n            color: 'white',\r\n            backgroundColor: 'red',\r\n            fontStyle: 'italic',\r\n            border: '2px solid black',\r\n            padding: '20px',\r\n            fontSize: 18\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <p style={style}>{notification.message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios';\r\nconst URL = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(URL);\r\n    return request.then(response => response.data.phonebook);\r\n}\r\n\r\nconst addNew = (newPerson) => {\r\n    const request = axios.post(URL, newPerson);\r\n    return request.then(response => response.data.phonebook);\r\n}\r\n\r\nconst del = (id) => {\r\n    const request = axios.delete(`${URL}/${id}`);\r\n    return request.then(response => response.data.phonebook);\r\n}\r\n\r\nconst updateNumber = (id, updatedPerson) => {\r\n    const request = axios.put(`${URL}/${id}`, updatedPerson);\r\n    return request.then(response => response.data.phonebook);\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    addNew,\r\n    updateNumber,\r\n    del\r\n}","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport AddNew from './components/AddNew';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport PhoneBookService from './services/PhoneBook';\nimport PhoneBook from './services/PhoneBook';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newPhone, setNewPhone] = useState('');\n  const [search, setSearch] = useState('');\n  const [notification, setNotification] = useState({\n    message: null,\n    type: null\n  });\n\n  useEffect(() => {\n    PhoneBookService.getAll()\n      .then(persons => setPersons(persons));\n  }, []);\n\n  const handleNoteChange = (e) => {\n    let inputNameValue = e.target.value;\n    setNewName(inputNameValue);\n  }\n\n  const handlePhoneChange = (e) => {\n    let inputPhoneValue = e.target.value;\n    setNewPhone(inputPhoneValue);\n  }\n\n  const handleSearch = (e) => {\n    let inputSearchValue = e.target.value;\n    setSearch(inputSearchValue);\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    let personExists = persons.find(person => person.name.toUpperCase().trim() === newName.toUpperCase().trim());\n\n    if (personExists) { // the person exists, let's check if wants to change his number\n      let changedPerson = { ...personExists, number: newPhone }; // copy of the person with the number changed\n      if (window.confirm(`${personExists.name} is already added to phonebook, replace the old number with a new one`)) {\n        PhoneBook.updateNumber(personExists.id, changedPerson)\n          .then(changedPerson => {\n            setPersons(persons.map(person => (person.id !== changedPerson.id) ? person : changedPerson))\n            setNotification({ message: `Phone of ${changedPerson.name} updated!`, type: 'success' })\n          })\n          .catch(err => setNotification({ message: `Error updating number`, type: 'error' }));\n      }\n    } else { // person not exists, let's add a new one\n      let newPerson = { name: newName, number: newPhone };\n      PhoneBookService.addNew(newPerson)\n        .then(newPerson => {\n          setNotification({ message: `New person added`, type: 'success' })\n          setPersons(persons.concat(newPerson))\n        })\n        .catch(err => setNotification({ message: `Error adding new person ${err.response.data.err}`, type: 'error' }));\n      }\n  }\n\n  const handleDelete = (name, id) => {\n    if (window.confirm(`Are you sure that you want to delete ${name}?`)) {\n      PhoneBookService.del(id)\n        .then(deletedNote => {\n          setNotification({ message: `Deleted succesfully`, type: 'success' });\n          setPersons(persons.filter(person => person.id !== id))\n        })\n        .catch(err => setNotification({ message: `Error: ${name} it's already deleted`, type: 'error' }));\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter search={search} handleSearch={handleSearch} />\n\n      <h3>Add a new</h3>\n      <AddNew newPhone={newPhone}\n        newName={newName}\n        handleFormSubmit={handleFormSubmit}\n        handleNoteChange={handleNoteChange}\n        handlePhoneChange={handlePhoneChange} />\n\n      <h3>Numbers</h3>\n      <Persons persons={persons} search={search} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}